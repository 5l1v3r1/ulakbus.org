@startuml

skinparam classAttributeFontName Monospaced
skinparam classBackgroundColor #FFFFFF
skinparam classBorderColor #D8D8D8
skinparam packageBorderColor #BDBDBD
skinparam classArrowColor #0B615E
skinparam shadowing false

'skinparam monochrome true
'skinparam nodesep 100
'skinparam ranksep 100
'note "All <color:black><b> (M)odels</b></color> extends <b>pyoko.Model</b> class" as N #orchid
title
<size:24>Entity Based Model Diagram</size>
( All Models extends <b>pyoko.Model</b> class )
endtitle
'legend left
'n..*     n or more instances
'n..m    Min n, Max m instances
'endlegend






package auth{

class User <<(M,orchid)>>{
|_ id                  Int
|_ **IdentityInfo(Model)**
   |_  tckno           string
   |_  name            string
   |_  surname         string
   |_  birth_date      Date
   |_  birth_place     Date
   |_  neighborhood    string
   |_  father_name     String
   |_  mother_name     String
   |_  gender          String
   |_  marital_status  String
   |_  town_code       Int
   |_  city            Int
   |_  blood_type      String
   |_  former_surname  String
|_ **ContactInfo(Model)**
   |_  home_phone      String
   |_  work_phone      String
   |_  mobile_phone    String
   |_  address_pri     String
   |_  address_sec     String
   |_  postal_code     Int
   |_  primary_email   String
   |_  secondary_email String
   |_  website         String
--
authenticate()
get_permissions()
}

class LimitedPermissions <<(M,orchid)>> {
restrictive     Boolean(False)
time_start      String
time_end        String
--
**IPList(ListNode)**
|_ ip           String
**Permissions(ListNode)**
|_ permission       **Permission()**
**AbstractRoles(ListNode)**
|_ abstract_role    **AbstractRole()**
**Roles(ListNode)**
|_ role             **Role()**
}
LimitedPermissions "0..*" -- "0..*" Permission
LimitedPermissions "0..*" -- "0..*" Role
LimitedPermissions "0..*" -- "0..*" AbstractRole

class AbstractRole<<(M,orchid)>>{
Permissions(ListNode)
|_permission    **Permissions()**
id              Int
name            String
--
}
class Role<<(M,orchid)>>{
abstract_role   **AbstractRole()**
user            **User()**
unit            **Unit()**
Permissions(ListNode)
|_permission    **Permissions()**
active          Boolean
start_date      Date
end_date        Date
--
}
class Permission<<(M,orchid)>>{
name            String
code            String
}
}
class Personel <<(M,orchid)>>{
tckn              String
ad                String
soyad             String
personel_turu     String
dogum_tarihi      Date
cep_telefonu      String
--
**NufusKayitlari(Node)**
|_ tckn                       String  *
|_ ad                         String  *
|_ soyad                      String  *
|_ ilk_soy_ad                 String
|_ dogum_tarihi               Date    *
|_ cinsiyet                   String  *
|_ emekli_sicil_no            Int     *
|_ memuriyet_baslama_tarihi   Date    *
|_ kurum_sicil                String  *
|_ maluliyet_kod              String  *
|_ yetki_seviyesi             String  *
|_ aciklama                   String
|_ kuruma_baslama_tarihi      Date
|_ gorev_tarihi6495           Date
|_ emekli_sicil6495           Int
|_ durum                      Boolean *
|_ sebep                      Int     *
}

class HizmetKurs <<(M,orchid)>>{
tckn                    String   *
kayit_no                String
kurs_ogrenim_suresi     Int      *
mezuniyet_tarihi        Date     *
kurs_nevi               String   *
bolum_ad                String   *
okul_ad                 String   *
ogrenim_yeri            String
denklik_tarihi          Date
denklik_okulu           String
denklik_bolum           String
kurum_onay_tarihi       Date     *

--
}

class HizmetOkul <<(M,orchid)>>{
kayit_no                String
tckn                    String   *
ogrenim_durumu          Int      *
mezuniyet_tarihi        Date     *
okul_ad                 String
bolum                   String
ogrenim_yer             String
denklik_tarihi          Date
denklik_okul            String
denklik_bolum           String
ogrenim_suresi          Int      *
hazirlik                Boolean  *
kurum_onay_tarihi       Date     *
}


class HizmetMahkeme <<(M,orchid)>>{
tckn                    String   *
kayit_no                String
mahkeme_ad              String   *
sebep                   Int      *
karar_tarihi            Date     *
karar_sayisi            Int      *
kesinlesme_tarihi       Date
asil_dogum_tarihi       Date
tashih_dogum_tarihi     Date
asil_ad                 String
tashih_ad               String
asil_soyad              String
tashih_soyad            String
gecerli_dogum_tarihi    Date
aciklama                String
gun_sayisi              Int
kurum_onay_tarihi       Date     *
}

class HizmetBirlestirme <<(M,orchid)>>{
tckn                          String   *
kayit_no                      String
sgk_nevi                      Int      *
sgk_sicil_no                  String   *
baslama_tarihi                Date     *
bitis_tarihi                  Date     *
sure                          Int      *
kamuİsyeri_ad                 String
ozel_isyeri_ad                String
bag_kur_meslek                String
ulke_kod                      Int
banka_sandık_kod              Int
kıdem_tazminat_odeme_durumu   String
ayrilma_nedeni                String
kha_durum                     String
kurum_onay_tarihi             Date     *
}
class HizmetTazminat <<(M,orchid)>>{
kayit_no                String
tckn                    String   *
unvan_kod               Int      *
makam                   Int
gorev                   Int
temsil                  Int
tazminat_tarihi         Date     *
tazminat_bitis_tarihi   Date
kadrosuzluk             Int
kurum_onay_tarihi       Date     *
}

class HizmetUnvan <<(M,orchid)>>{
kayit_no                String
tckn                    String   *
unvan_kod               Int      *
unvan_tarihi            Date     *
unvan_bitis_tarihi      Date
hizmet_sinifi           String   *
asil_vekil              String   *
atama_sekli             String   *
kurum_onay_tarihi       Date     *
fhz_orani               Float
}
class HizmetAcikSure <<(M,orchid)>>{
tckn                          String   *
kayit_no                      String
acik_sekil                    Int      *
durum                         Int      *
hizmet_durum                  Int      *
husus                         String   *
aciga_alinma_tarih            Date
goreve_son_tarih              Date
goreve_iade_istem_tarih       Date
goreve_iade_tarih             Date
acik_aylik_bas_tarih          Date
acik_aylik_bit_tarih          Date
goreve_son_aylik_bas_tarih    Date
goreve_son_aylik_bit_tarih    Date
s_yonetim_kald_tarih          Date
aciktan_atanma_tarih          Date
kurum_onay_tarihi             Date     *
}
class HizmetBorclanma <<(M,orchid)>>{
tckn                 String   *
kayit_no             String
ad                   String   *
soyad                String   *
emekli_sicil         String   *
derece               Int      *
kademe               Int      *
ekgosterge           Int      *
baslama_tarihi       Date     *
bitis_tarihi         Date     *
gun_sayisi           Int      *
kanun_kod            Int      *
borc_nevi            String   *
toplam_tutar         Float    *
odenen_miktar        Float
calistigi_kurum      String   *
isyeri_il            String   *
isyeri_ilce          String   *
borclanma_tarihi     Date
odeme_tarihi         Date
kurum_onay_tarihi    Date     *
}
class HizmetIHS <<(M,orchid)>>{
tckn                 String   *
kayit_no             String
baslama_tarihi       Date     *
bitis_tarihi         Date     *
ihz_nevi             Int      *
}

class HizmetIstisnaiIlgi <<(M,orchid)>>{
tckn                 String   *
kayit_no             String
baslama_tarihi       Date     *
bitis_tarihi         Date     *
gun_sayisi           Int      *
istisnai_ilgi_nevi   Int      *
kha_durum            String   *
kurum_onay_tarihi    Date     *
}

class AskerlikKayitlari <<(M,orchid)>>{
askerlik_nevi                    Int      *
baslama_tarihi                   Date
bitis_tarihi                     Date
kayit_no                         String
kita_baslama_tarihi              Date
kita_bitis_tarihi                Date
muafiyet_neden                   String
sayilmayan_gun_sayisi            Int
sinif_okulu_sicil                String
subayliktan_erlige_gecis_tarihi  Date
subay_okulu_giris_tarihi         Date
tckn                             String   *
tegmen_nasp_tarihi               Date
gorev_yeri                       String
kurum_onay_tarihi                Date     *
astegmen_nasp_tarihi             Date
--
employee             **Personel()**
}

class HizmetKayitlari<<(M,orchid)>>{
tckn                                String   *
kayit_no                            String
baslama_tarihi                      Date
bitis_tarihi                        Date
gorev                               String   *
unvan_kod                           Int      *
yevmiye                             String
ucret                               String
hizmet_sinifi                       String   *
kadro_derece                        Int      *
odeme_derece                        Int      *
odeme_kademe                        Int      *
odeme_ekgosterge                    Int      *
kazanilmis_hak_ayligi_derece        Int      *
kazanilmis_hak_ayligi_kademe        Int      *
kazanilmis_hak_ayligi_ekgosterge    Int      *
emekli_derece                       Int      *
emekli_kademe                       Int      *
emekli_ekgosterge                   Int      *
sebep_kod                           Int      *
kurum_onay_tarihi                   Date     *
--
employee             **Personel()**
}
class Unit<<(M,orchid)>>{
type        String
name        String
parent      **Unit()**
--
people      **Role()**
}

class Lecturer<<(M,orchid)>>{
employe         **Personel()**
name            String
type            [String]
--
note: non-employee (guest) lecturers data
will be stored here
--
}

class Curriculum<<(M,orchid)>>{
unit        **Unit()**
period      Int
--
lectures    **BaseLecture()**

}


'class StudentTimeTable<<(M,orchid)>>{
'student         **Student()**
'timetable       **TimeTable()**
'week_day        Int
'hours           [Int]
'}

class Location<<(M,orchid)>>{
code            String
building        String
--
lectures        **Lecture()**
}

class Lecture<<(M,orchid)>>{
lecturer    **Lecturer()**
base        **BaseLecture()**
--
}
class BaseLecture<<(M,orchid)>>{
name     String
code     String
credit   String
--
}
class TimeTable<<(M,orchid)>>{
lecture         **Lecture()**
location        **Location()**
week_day        Int
day_hour        Int
hours           [Int]
--
}


class Student <<(M,orchid)>> {
timetable           **TimeTable()**
role                **Role()**
timetable           **TimeTable()**
--
**Lectures(ListNode)**
|_ lecture         **Lecture()**
**Exams(ListModel)**
|_ exam             **Exam()**
**Attendances(ListModel)**
|_ attendance        **Attendance()**
}
class Exam <<(M,orchid)>> {
lecture           **Lecture()**
type              String
date              Date
point             Int
--
}

class Attendance <<(M,orchid)>> {
lecture           **Lecture()**
attended          Boolean
date              Date
hour              Int
--
}

Personel "1" -- "0..*" AskerlikKayitlari
Personel "1" -- "0..*" HizmetKayitlari
Personel "1" -- "0..*" HizmetKurs
Personel "1" -- "0..*" HizmetOkul
Personel "1" -- "0..*" HizmetTazminat
Personel "1" -- "0..*" HizmetMahkeme
Personel "1" -- "0..*" HizmetUnvan
Personel "1" -- "0..*" HizmetBorclanma
Personel "1" -- "0..*" HizmetBirlestirme
Personel "1" -- "0..*" HizmetIHS
Personel "1" -- "0..*" HizmetAcikSure
Personel "1" -- "0..*" HizmetIstisnaiIlgi

Lecture -- Lecturer
Lecture -- Student
Unit "0..*" o-- "1" Curriculum
BaseLecture -- Curriculum
BaseLecture -- Lecture

Unit "0..*" -- "1" Role
Unit "0..1" --o "0..*" Unit
User "0..*" o-- "1" Role
Lecturer --o Personel
Lecture --o TimeTable
Role "1" --o "0..*" AbstractRole
AbstractRole "0..*" o-- "0..*" Permission
Role "0..*" o-- "0..*" Permission

Lecture "0..*" -- "1" Exam
Lecture "0..*" -- "1" Attendance
Student "0..*" -- "1" Exam
Student "0..*" -- "1" Attendance

User "1" -- "1" Student
User "1" -- "1" Personel
TimeTable "1" o-- "0..*" Location
Unit "0..*" o-- "1..*" Location
TimeTable "0..*" --o "0..*" Student

' XXXXXXXXXXXX
' Unit "0..*" -- "0..*" Personel
' Student "1..*" --o "0..*" Curriculum
' XXXXXXXXXXXX
@enduml
